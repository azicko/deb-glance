Description: Fixe most pep8 errors.
Author: Thomas Goirand <zigo@debian.org>
Forwarded: not-needed

--- a/glance/tests/unit/test_cfg.py
+++ b/glance/tests/unit/test_cfg.py
@@ -750,7 +750,7 @@
         self.assertEquals(logger.logged, [
                 "*" * 80,
                 "Configuration options gathered from:",
-                "command line args: ['--foo', 'this', '--blaa-bar', 'that', "\
+                "command line args: ['--foo', 'this', '--blaa-bar', 'that', "
                 "'--blaa-key', 'admin', '--passwd', 'hush']",
                 "config files: []",
                 "=" * 80,
--- a/glance/common/client.py
+++ b/glance/common/client.py
@@ -572,9 +572,9 @@
             return (e.errno != errno.ESPIPE)
 
     def _sendable(self, body):
-        return (SENDFILE_SUPPORTED      and
+        return (SENDFILE_SUPPORTED and
                 hasattr(body, 'fileno') and
-                self._seekable(body)    and
+                self._seekable(body) and
                 not self.use_ssl)
 
     def _iterable(self, body):
--- a/glance/common/utils.py
+++ b/glance/common/utils.py
@@ -341,7 +341,7 @@
 
     height_width = func.get(platform.os.name, _get_terminal_size_unknownOS)()
 
-    if height_width == None:
+    if height_width is None:
         raise exception.Invalid()
 
     for i in height_width:
--- a/glance/common/cfg.py
+++ b/glance/common/cfg.py
@@ -748,7 +748,7 @@
                                               usage=self.usage)
         self._cparser = None
 
-        self.register_cli_opt(\
+        self.register_cli_opt(
             MultiStrOpt('config-file',
                         default=self.default_config_files,
                         metavar='PATH',
@@ -838,7 +838,7 @@
         :return: False if the opt was already register, True otherwise
         :raises: DuplicateOptError, ArgsAlreadyParsedError
         """
-        if self._args != None:
+        if self._args is not None:
             raise ArgsAlreadyParsedError("cannot register CLI option")
 
         if not self.register_opt(opt, group):
--- a/glance/common/auth.py
+++ b/glance/common/auth.py
@@ -133,7 +133,7 @@
                 # 3. In some configurations nova makes redirection to
                 # v2.0 keystone endpoint. Also, new location does not
                 # contain real endpoint, only hostname and port.
-                if  'v2.0' not in auth_url:
+                if 'v2.0' not in auth_url:
                     auth_url = urlparse.urljoin(auth_url, 'v2.0/')
             else:
                 # If we sucessfully auth'd, then memorize the correct auth_url
